version: '3'
services:
    zk-01:
        image: zookeeper:3.5.5
        restart: always
        container_name: zk-01
        ports:
            - 2181:2181
            - 2888:2888
            - 3888:3888
        environment:
            ZOO_MY_ID: 1
            ZOO_SERVERS: ${ZOO_SERVERS}
        network_mode: "host"
        
    zk-02:
        image: zookeeper:3.5.5
        restart: always
        container_name: zk-02
        ports:
            - 2182:2181
            - 2889:2888
            - 3889:3888
        environment:
            #quorumListenOnAllIPs: true
            ZOO_MY_ID: 2
            ZOO_SERVERS: ${ZOO_SERVERS}
        network_mode: "host"

    zk-03:
        image: zookeeper:3.5.5
        restart: always
        container_name: zk-03
        ports:
            - 2183:2181
            - 2890:2888
            - 3890:3888
        environment:
            ZOO_MY_ID: 3
            ZOO_SERVERS: ${ZOO_SERVERS}
        network_mode: "host"

    kafka-1:
        image: wurstmeister/kafka:2.12-2.1.1
        restart: always
        container_name: kafka-1
        environment:
            - KAFKA_BROKER_ID=1 #kafka的broker.id，区分不同broker
            - KAFKA_LISTENERS=PLAINTEXT://${ALL_IP}:9092 #绑定监听9092端口
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${KFK_IP}:9092 #绑定发布订阅的端口
            - KAFKA_ZOOKEEPER_CONNECT=${ZOO_SERVERS1} #连接zookeeper的服务地址
            - KAFKA_MESSAGE_MAX_BYTES=2000000 #单条消息最大字节数
            #- KAFKA_CREATE_TOPICS=Topic1:1:3,Topic2:1:1:compact #创建broker时创建的topic:partition-num:replica-num[:clean.policy]
        network_mode: "host"
        
    kafka-2:
        image: wurstmeister/kafka:2.12-2.1.1
        restart: always
        container_name: kafka-2
        environment:
            - KAFKA_BROKER_ID=2
            - KAFKA_LISTENERS=PLAINTEXT://${ALL_IP}:9093
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${KFK_IP}:9093
            - KAFKA_ZOOKEEPER_CONNECT=${ZOO_SERVERS1}
            - KAFKA_MESSAGE_MAX_BYTES=2000000
            #- KAFKA_CREATE_TOPICS=${KAFKA_BOOTSTRAP_CREATE_TOPICS}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        network_mode: "host"
        
    kafka-3:
        image: wurstmeister/kafka:2.12-2.1.1
        restart: always
        container_name: kafka-3
        environment:
            - KAFKA_BROKER_ID=3
            - KAFKA_LISTENERS=PLAINTEXT://${ALL_IP}:9094
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${KFK_IP}:9094
            - KAFKA_ZOOKEEPER_CONNECT=${ZOO_SERVERS1}
            - KAFKA_MESSAGE_MAX_BYTES=2000000
            #- KAFKA_CREATE_TOPICS=${KAFKA_BOOTSTRAP_CREATE_TOPICS}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        network_mode: "host"
        
    kafka-manager:
        image: hlebalbau/kafka-manager:stable
        container_name: kafka-manager
        ports:
            - "19000:9000"
        environment:
            ZK_HOSTS: ${ZOO_SERVERS1}
            APPLICATION_SECRET: "admin"
